[{"title":"打字机效果实现","url":"/2025/07/03/%E6%89%93%E5%AD%97%E6%9C%BA%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0/","content":"打字机效果实现打字机效果是一种常见的网页动画效果，通常用于在页面上逐字显示文字内容，模拟真实的打字过程。本文将实现一个简单的打字机效果。\n实现原理\n定义一个 initTypewriter() 方法，用于初始化打字机效果。\nquerySelector(&#39;.description&#39;) 获取整个描述框；\n初始设置为透明 (opacity: 0 )，然后通过 setTimeout 延迟显示；\n使用 .desc-item 容器包裹每一行文字；\n对每个 .desc-item 内容进行逐字拼接，并通过递归调用 typewriter() 函数实现逐字显示；\n.desc 表示实际显示的文字内容；\n当所有字符显示完毕后，隐藏光标 .cursor。\n\n代码实现JavaScript 逻辑&lt;script&gt;  const initTypewriter = () =&gt; &#123;    const descBox = document.querySelector(&#x27;.description&#x27;)    if (descBox) &#123;      descBox.style.opacity = &#x27;0&#x27;      setTimeout(() =&gt; &#123;        descBox.style.opacity = &#x27;1&#x27;        const descItemList = descBox.querySelectorAll(&#x27;.desc-item&#x27;)        descItemList.forEach(descItem =&gt; &#123;          const desc = descItem.querySelector(&#x27;.desc&#x27;)          const cursor = descItem.querySelector(&#x27;.cursor&#x27;)          const text = desc.innerHTML          desc.innerHTML = &#x27;&#x27;          let charIndex = 0          const typewriter = () =&gt; &#123;            if (charIndex &lt; text.length) &#123;              desc.textContent += text[charIndex]              charIndex++              setTimeout(typewriter, 100)            &#125; else &#123;              cursor.style.display = &#x27;none&#x27;            &#125;          &#125;          if (text) typewriter()        &#125;)      &#125;, 300)    &#125;  &#125;  initTypewriter()&lt;/script&gt;\n\nHTML 结构&lt;div class=&quot;description&quot;&gt;  &lt;div class=&quot;desc-item&quot;&gt;    &lt;span class=&quot;desc&quot;&gt;打印机打字效果展示~~~&lt;/span&gt;    &lt;span class=&quot;cursor&quot;&gt;｜&lt;/span&gt;  &lt;/div&gt;  &lt;div class=&quot;desc-item&quot;&gt;    &lt;span class=&quot;desc&quot;&gt;学习新思想，争做新青年！&lt;/span&gt;    &lt;span class=&quot;cursor&quot;&gt;｜&lt;/span&gt;  &lt;/div&gt;&lt;/div&gt;\n\n可选 CSS 样式（增强视觉效果）.description &#123;  font-size: 20px;  line-height: 1.5;&#125;.desc-item &#123;  margin-bottom: 1em;&#125;\n"},{"title":"第二篇文章","url":"/2025/07/01/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/","content":"大家好，我是lizheng\n","tags":["生活","自己"]},{"title":"文章1","url":"/2025/07/01/%E6%96%87%E7%AB%A01/","content":"这是我的第一篇博客文章。\n","categories":["技术"],"tags":["博客","测试"]},{"title":"Hello World","url":"/2025/07/01/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]